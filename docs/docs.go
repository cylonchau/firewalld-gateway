// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/fw/v1/masquerade": {
            "get": {
                "description": "Get nat rule list on firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Get nat rule list on firewalld runtime.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Enable masqerade on firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Enable masqerade on firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Disable masqerade on firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Disable masqerade on firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v1/nat": {
            "get": {
                "description": "Get nat rules at firewalld runtime",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Get nat rules at firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Add a nat rule at firewall runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Add a nat rule at firewall runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.ForwardQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a nat rule at firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Remove a nat rule at firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v1/ports": {
            "get": {
                "description": "Get port rule at firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Get port rule at firewalld runtime.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Add port rule at firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Add port rule at firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a firewalld port rule in runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Delete a firewalld port rule in runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.PortQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fw/v1/rich": {
            "get": {
                "description": "Get rich rule list at firewalld runtimes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Get rich rule list at firewalld runtimes.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Add rich rule at firewalld runtimes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Add rich rule at firewalld runtimes.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.RichQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove rich rule at firewalld runtimes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Remove rich rule at firewalld runtimes.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.RichQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v1/service": {
            "get": {
                "description": "List all service rule on firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "List available service type on firewalld.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Add a service rule on firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "Add a service rule on firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a service rule on firewalld runtime.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "Remove a service rule on firewalld runtime.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/masquerade": {
            "get": {
                "description": "Get status of masqurade at firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Get status of masqurade at firewalld permanent.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Enable masqerade at firewall permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Enable masqerade at firewall permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Disable masqerade at firewall permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Disable masqerade at firewall permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/nat": {
            "get": {
                "description": "Get nat rules at firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Get nat rules at firewalld permanent.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "zone",
                        "name": "zone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Add a nat rule at firewall permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Add a nat rule at firewall permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.ForwardQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a nat rule at firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld NAT"
                ],
                "summary": "Remove a nat rule at firewalld permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/ports": {
            "get": {
                "description": "Get port rule on firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Get port rule on firewalld permanent.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Add port rule on firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Add port rule on firewalld permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a firewalld port rule on permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Delete a firewalld port rule on permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.PortQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fw/v2/rich": {
            "get": {
                "description": "Get rich rule list on firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Get rich rule list on firewalld permanent.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "body",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Add rich on firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Add rich rule on firewalld permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.RichQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove rich rule on firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld rich"
                ],
                "summary": "Remove rich rule on firewalld permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.RichQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/service": {
            "get": {
                "description": "List all service rule on firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "List available service type on firewalld.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Add a service rule at firewalld permanent.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "Add a service rule at firewalld permanent.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.ServiceSettingQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/setting": {
            "get": {
                "description": "List zone.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "List zone.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "description": "Add setting rule in firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Add setting rule in firewalld.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.ZoneSettingQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a setting rules in firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Remove a setting rules in firewalld.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.RemoveQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/fw/v2/setting/dp": {
            "get": {
                "description": "Get default policy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Get default policy.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/setting/dz": {
            "get": {
                "description": "Get default zone.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Get default zone.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/setting/flush": {
            "post": {
                "description": "Flush all firewalld rules to default.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Flush all firewalld rules to default.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.Query"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/setting/reload": {
            "post": {
                "description": "Reload firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Reload firewalld.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v2/setting/sdz": {
            "post": {
                "description": "Set default zone in firewalld.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Set default zone in firewalld.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip",
                        "name": "ip",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/masquerade": {
            "put": {
                "description": "Enable masqerade on firewalld runtime with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Enable masqerade on firewalld runtime with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchZoneQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Disable masqerade on firewalld runtime with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld masquerade"
                ],
                "summary": "Disable masqerade on firewalld runtime with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchZoneQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/port/permanent": {
            "put": {
                "description": "Add a port rule on firewalld permanent with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Add a port rule on firewalld permanent with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchPortQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/port/runtime": {
            "put": {
                "description": "Add a port rule on firewalld runtime with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld port"
                ],
                "summary": "Add a port rule on firewalld runtime with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchPortQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/service/runtime": {
            "put": {
                "description": "Add a service rule on firewalld runtime with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld service"
                ],
                "summary": "Add a service rule on firewalld runtime with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchServiceQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/setting/reload/runtime": {
            "put": {
                "description": "Reload firewalld runtime with delay timer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Reload firewalld runtime with delay timer.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchSettingQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/fw/v3/setting/sdzone": {
            "post": {
                "description": "Set default zone on firewalld with delay timer, this is a runtime and permanent change.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "firewalld setting"
                ],
                "summary": "Set default zone on firewalld with delay timer, this is a runtime and permanent change.",
                "parameters": [
                    {
                        "description": "body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.BatchPortQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Return process status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Return process status.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/security/audit": {
            "get": {
                "description": "Return all tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit"
                ],
                "summary": "Return all tokens.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/cip": {
            "get": {
                "description": "Get client login ip.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get client login ip.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/security/auth/roleRouters": {
            "get": {
                "description": "Return all routers of role。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Return all routers of role.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Input parameter",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/roles": {
            "get": {
                "description": "Return all roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Return all roles.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a role.",
                "parameters": [
                    {
                        "description": "role body",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.RoleEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update token with role_id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Update token with role_id.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.RoleEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a role with role_id.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Delete a role with role_id.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/roles/allocate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "allocate roles to user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "allocate roles to user.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.RoleEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/routers": {
            "get": {
                "description": "Return all routers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Return all routers.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/userRoles": {
            "get": {
                "description": "Return all routers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Return all routers.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/auth/userinfo": {
            "get": {
                "description": "Return userinfo.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Return userinfo.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/tokens": {
            "get": {
                "description": "Return all tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Return all tokens.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "token id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Create a token.",
                "parameters": [
                    {
                        "description": "token body",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.TokenEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update token with token_id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Update token with token_id.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.TokenEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a token with token_id.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Delete a token with token_id.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/users": {
            "get": {
                "description": "Return all users。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Return all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a user。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a user.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.UserQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a user。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "update user information.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "userinput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.UserEditQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user.",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/security/users/allocate": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Assign roles to users。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Assign roles to users.",
                "parameters": [
                    {
                        "description": "Input parameter",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/query.AllocateRoleQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sso/signin": {
            "post": {
                "description": "login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSO"
                ],
                "summary": "login.",
                "parameters": [
                    {
                        "description": "signup body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.UserQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sso/signup": {
            "post": {
                "description": "register.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SSO"
                ],
                "summary": "register.",
                "parameters": [
                    {
                        "description": "user body",
                        "name": "query",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/query.UserQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Accept": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "boolean"
                }
            }
        },
        "api.Audit": {
            "type": "object",
            "properties": {
                "limit": {
                    "$ref": "#/definitions/api.Limit"
                }
            }
        },
        "api.Destination": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "invert": {
                    "type": "string"
                }
            }
        },
        "api.Drop": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "boolean"
                }
            }
        },
        "api.ForwardPort": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "toaddr": {
                    "type": "string"
                },
                "toport": {
                    "type": "string"
                }
            }
        },
        "api.IcmpBlock": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.IcmpType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Interface": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Limit": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "api.Log": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string"
                },
                "limit": {
                    "$ref": "#/definitions/api.Limit"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "api.Mark": {
            "type": "object",
            "properties": {
                "limit": {
                    "$ref": "#/definitions/api.Limit"
                },
                "set": {
                    "type": "string"
                }
            }
        },
        "api.Port": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "api.Protocol": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "api.QuerySettings": {
            "type": "object",
            "required": [
                "description",
                "short",
                "target"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "forward": {
                    "type": "boolean"
                },
                "forwardport": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ForwardPort"
                    }
                },
                "icmp-block-inversion": {
                    "type": "boolean"
                },
                "icmpblock": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.IcmpBlock"
                    }
                },
                "interface": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Interface"
                    }
                },
                "masquerade": {
                    "type": "boolean"
                },
                "port": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Port"
                    }
                },
                "protocol": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Protocol"
                    }
                },
                "rule": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Rule"
                    }
                },
                "service": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short": {
                    "type": "string"
                },
                "source": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Source"
                    }
                },
                "sourceport": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SourcePort"
                    }
                },
                "target": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.Reject": {
            "type": "object",
            "properties": {
                "flag": {
                    "type": "boolean"
                }
            }
        },
        "api.Rule": {
            "type": "object",
            "properties": {
                "accept": {
                    "$ref": "#/definitions/api.Accept"
                },
                "audit": {
                    "$ref": "#/definitions/api.Audit"
                },
                "destination": {
                    "$ref": "#/definitions/api.Destination"
                },
                "drop": {
                    "$ref": "#/definitions/api.Drop"
                },
                "family": {
                    "type": "string"
                },
                "forwardport": {
                    "$ref": "#/definitions/api.ForwardPort"
                },
                "icmpblock": {
                    "$ref": "#/definitions/api.IcmpBlock"
                },
                "icmptype": {
                    "$ref": "#/definitions/api.IcmpType"
                },
                "limit": {
                    "$ref": "#/definitions/api.Limit"
                },
                "log": {
                    "$ref": "#/definitions/api.Log"
                },
                "mark": {
                    "$ref": "#/definitions/api.Mark"
                },
                "port": {
                    "$ref": "#/definitions/api.Port"
                },
                "protocol": {
                    "$ref": "#/definitions/api.Protocol"
                },
                "reject": {
                    "$ref": "#/definitions/api.Reject"
                },
                "service": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "$ref": "#/definitions/api.Source"
                },
                "value": {
                    "$ref": "#/definitions/api.Value"
                }
            }
        },
        "api.ServiceSetting": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "destination": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "module": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Port"
                    }
                },
                "protocol": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "short": {
                    "type": "string"
                },
                "source_ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.Source": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "invert": {
                    "type": "string"
                },
                "ipset": {
                    "type": "string"
                },
                "mac": {
                    "type": "string"
                }
            }
        },
        "api.SourcePort": {
            "type": "object",
            "properties": {
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "api.Value": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "query.AllocateRoleQuery": {
            "type": "object",
            "required": [
                "role_ids",
                "user_id"
            ],
            "properties": {
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "query.BatchPortQuery": {
            "type": "object",
            "properties": {
                "delay": {
                    "type": "integer"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/query.PortQuery"
                    }
                }
            }
        },
        "query.BatchServiceQuery": {
            "type": "object",
            "properties": {
                "delay": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/query.ServiceQuery"
                    }
                }
            }
        },
        "query.BatchSettingQuery": {
            "type": "object",
            "required": [
                "hosts"
            ],
            "properties": {
                "delay": {
                    "type": "integer"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "query.BatchZoneQuery": {
            "type": "object",
            "required": [
                "action_object"
            ],
            "properties": {
                "action_object": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/query.ZoneDst"
                    }
                },
                "delay": {
                    "type": "integer"
                }
            }
        },
        "query.ForwardQuery": {
            "type": "object",
            "required": [
                "forward",
                "ip"
            ],
            "properties": {
                "forward": {
                    "$ref": "#/definitions/api.ForwardPort"
                },
                "ip": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.PortQuery": {
            "type": "object",
            "required": [
                "ip",
                "port"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/api.Port"
                },
                "timeout": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.Query": {
            "type": "object",
            "required": [
                "ip"
            ],
            "properties": {
                "forward": {
                    "$ref": "#/definitions/api.ForwardPort"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/api.Port"
                },
                "rich": {
                    "$ref": "#/definitions/api.Rule"
                },
                "service": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.RemoveQuery": {
            "type": "object",
            "required": [
                "ip",
                "name"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "query.RichQuery": {
            "type": "object",
            "required": [
                "ip",
                "rich"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "rich": {
                    "$ref": "#/definitions/api.Rule"
                },
                "timeout": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.RoleEditQuery": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "router_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "query.ServiceQuery": {
            "type": "object",
            "required": [
                "ip",
                "service"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "service": {
                    "type": "string"
                },
                "timeout": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.ServiceSettingQuery": {
            "type": "object",
            "required": [
                "host",
                "service_name",
                "setting"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "setting": {
                    "$ref": "#/definitions/api.ServiceSetting"
                }
            }
        },
        "query.TokenEditQuery": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_update": {
                    "type": "boolean"
                },
                "signed_to": {
                    "type": "string"
                }
            }
        },
        "query.UserEditQuery": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "query.UserQuery": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "query.ZoneDst": {
            "type": "object",
            "required": [
                "host",
                "zone"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "query.ZoneSettingQuery": {
            "type": "object",
            "required": [
                "Setting",
                "ip"
            ],
            "properties": {
                "Setting": {
                    "$ref": "#/definitions/api.QuerySettings"
                },
                "ip": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:2952",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Uranus API",
	Description:      "Uranus, distrubed firewall gateway",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
